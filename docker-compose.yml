version: '3.9'

services:
  sgil-proveedores-service:
    build: .
    ports:
      - "8005:8005"
    environment:
      - DB_HOST_URL=postgres
      - DB_NAME=sgil-proveedores
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - PROMETHEUS_MULTIPROC_DIR=/tmp
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/proveedores/health"]  # Ajusta la URL si es necesario
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  celery-worker:
    build: .
    command: celery -A celery_worker.celery_config.celery worker --loglevel=info --concurrency=4 -Q email_queue,logging_queue
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    healthcheck:
      test: ["CMD-SHELL", "celery -A celery_worker.celery_config.celery status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5  
    depends_on:
      redis:
        condition: service_healthy
      sgil-proveedores-service:
        condition: service_healthy

  flower:
    build: .
    image: mher/flower
    command: celery -A celery_worker.celery_config.celery flower --broker=redis://redis:6379/0
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
      celery-worker:
        condition: service_healthy
      sgil-proveedores-service:
        condition: service_healthy


  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sgil-proveedores
    ports:
      - "5435:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 30s
      timeout: 20s
      retries: 5


volumes:
  pg_data:


  